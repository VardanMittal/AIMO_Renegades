{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3ae1e503",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-04T16:24:27.265254Z",
     "iopub.status.busy": "2024-06-04T16:24:27.264829Z",
     "iopub.status.idle": "2024-06-04T16:24:28.351065Z",
     "shell.execute_reply": "2024-06-04T16:24:28.349585Z"
    },
    "papermill": {
     "duration": 1.093878,
     "end_time": "2024-06-04T16:24:28.354261",
     "exception": false,
     "start_time": "2024-06-04T16:24:27.260383",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "468e0128",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T16:24:28.362572Z",
     "iopub.status.busy": "2024-06-04T16:24:28.361997Z",
     "iopub.status.idle": "2024-06-04T16:24:48.662485Z",
     "shell.execute_reply": "2024-06-04T16:24:48.660939Z"
    },
    "papermill": {
     "duration": 20.308152,
     "end_time": "2024-06-04T16:24:48.665484",
     "exception": false,
     "start_time": "2024-06-04T16:24:28.357332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting pylatexenc\r\n",
      "  Downloading pylatexenc-2.10.tar.gz (162 kB)\r\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m162.6/162.6 kB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l-\b \bdone\r\n",
      "\u001b[?25hBuilding wheels for collected packages: pylatexenc\r\n",
      "  Building wheel for pylatexenc (setup.py) ... \u001b[?25l-\b \b\\\b \bdone\r\n",
      "\u001b[?25h  Created wheel for pylatexenc: filename=pylatexenc-2.10-py3-none-any.whl size=136816 sha256=07fc7f4645f46b3874f2658b6d3eac2f6d84b5c2923fba772e649496c11e5c05\r\n",
      "  Stored in directory: /root/.cache/pip/wheels/d3/31/8b/e09b0386afd80cfc556c00408c9aeea5c35c4d484a9c762fd5\r\n",
      "Successfully built pylatexenc\r\n",
      "\u001b[33mWARNING: Error parsing requirements for aiohttp: [Errno 2] No such file or directory: '/opt/conda/lib/python3.10/site-packages/aiohttp-3.9.1.dist-info/METADATA'\u001b[0m\u001b[33m\r\n",
      "\u001b[0mInstalling collected packages: pylatexenc\r\n",
      "Successfully installed pylatexenc-2.10\r\n"
     ]
    }
   ],
   "source": [
    "!pip install pylatexenc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "73c779cc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-04T16:24:48.674625Z",
     "iopub.status.busy": "2024-06-04T16:24:48.674156Z",
     "iopub.status.idle": "2024-06-04T16:24:48.701499Z",
     "shell.execute_reply": "2024-06-04T16:24:48.700183Z"
    },
    "papermill": {
     "duration": 0.035087,
     "end_time": "2024-06-04T16:24:48.704190",
     "exception": false,
     "start_time": "2024-06-04T16:24:48.669103",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "\n",
      "§ EULER\n",
      "\n",
      "This bit is very clever:\n",
      "\n",
      "    e^i π + 1 = 0\n",
      "\n",
      "where\n",
      "\n",
      "    e = lim_n →∞(1 + 1/n)^n\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from pylatexenc.latex2text import LatexNodes2Text\n",
    "\n",
    "latex_code = r\"\"\"\n",
    "\\section{Euler}\n",
    "\\emph{This} bit is \\textbf{very} clever:\n",
    "\\begin{equation}\n",
    "    \\mathrm{e}^{i \\pi} + 1 = 0 % wow!!\n",
    "\\end{equation}\n",
    "where\n",
    "\\[\n",
    "    \\mathrm{e} = \\lim_{n \\to \\infty} \\left(1 + \\frac{1}{n}\\right)^n\n",
    "\\]\n",
    "\"\"\"\n",
    "\n",
    "plain_text = LatexNodes2Text().latex_to_text(latex_code)\n",
    "print(plain_text)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "dockerImageVersionId": 30715,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 25.29175,
   "end_time": "2024-06-04T16:24:49.230457",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-04T16:24:23.938707",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
